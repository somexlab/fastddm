name: Build wheels

on:
  # Trigger on pushes to the mainline branches and version tags. This prevents building commits
  # twice when the pull request source branch is in the same repository.
  push:
    branches:
      - main
    tags:
      - "v*"

  # trigger on pull requests to main
  pull_request:
    branches:
      - main

  # trigger on request
  workflow_dispatch:

jobs:
  build_sdist:
    name: üì¶ Build source distribution
    runs-on: ubuntu-latest

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üèóÔ∏è Build SDist
        run: pipx run build --sdist

      - name: üìñ Check README rendering for PyPI
        run: pipx run twine check --strict dist/*

      - name: ‚¨ÜÔ∏è Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz
          if-no-files-found: error

  build_wheels:
    name: üì¶ Build wheel for ${{ matrix.os }}, Python ${{ matrix.python-version[1] }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üêç Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
        if: runner.os == 'Windows'

      - name: üèóÔ∏è Build wheels
        uses: pypa/cibuildwheel@v2.23.3
        env:
          # Build with C++ support
          CIBW_BUILD_FRONTEND_ARGS: "--config-settings=cmake.define.ENABLE_CPP=ON"

          # Manually select the python version
          CIBW_PROJECT_REQUIRES_PYTHON: "==${{ matrix.python-version }}.*"
          CIBW_SKIP: "{pp*,*-musllinux_*}"

          # Build only for 64-bit platforms
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: auto64
          CIBW_ARCHS_WINDOWS: auto64

          # Configure environment variables
          MACOSX_DEPLOYMENT_TARGET: "10.9"

          # verbosity
          CIBW_BUILD_VERBOSITY: 1

          # Test the wheels
          #CIBW_TEST_REQUIRES: "pytest pytest-regtest"
          #CIBW_TEST_COMMAND: "pytest -v {project}/tests"
          #CIBW_TEST_SKIP:

      - name: ‚¨ÜÔ∏è Upload wheel artifacts
        uses: actions/upload-artifact@v4
        with:
          name: cibw-${{ matrix.os }}-${{ matrix.python-version }}
          path: ./wheelhouse/*.whl

  upload_pypi:
    name: üöÄ Publish [PyPI]
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref_type == 'tag'

    steps:
      - name: üêç Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: ‚¨áÔ∏è Download artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: üîç Check files
        run: ls -lR dist

      - name: üöÄ Upload release to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          verbose: true

      - name: üß™ Upload release to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
